name: manual-branch-RELEASE

env:
  GPG_KEY_ID_GITHUB_TECHUSER: '${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}'
  PROJECT_NAME: ${GITHUB_REPOSITORY#*/}

on:
  workflow_dispatch:
    inputs:
      comment:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Comment for release'
        # Default value if no value is explicitly provided
        default: 'Start MAIN release from WEB UI'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  manual-branch-RELEASE:
    name: Manual branch release

    # run only on main
    if: contains('release/${{env.PROJECT_NAME}}',github.ref_name) && contains('["rombow","czenczl","speter555"]', github.actor))

    runs-on: ubuntu-latest

    steps:

      ###############
      # pre release
      ###############

      # Import GPG key
      - name: Import GPG key
        # GPG private key exported by armor (begins with: '-----BEGIN PGP PRIVATE KEY BLOCK-----') the whole content encoded with base64, and loaded in the content of the secret
        # Decode and load the base64 encoded private key
        run: |
          mkdir -p ~/.gnupg/
          echo "${{ secrets.GPG_SIGNING_KEY_GITHUB_TECHUSER }}" | base64 --decode > ~/.gnupg/private.key
          gpg --import ~/.gnupg/private.key

      # https://github.com/shimataro/ssh-key-action
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          # The content is in PEM format (begins with: '-----BEGIN RSA PRIVATE KEY-----') SSH key
          key: ${{ secrets.SSH_PRIVATE_KEY_GITHUB_TECHUSER }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }} # its content is currently empty
          # config: ${{ secrets.CONFIG }} # ssh_config; optional

      # Configure GIT for signed commit
      - name: Configure GIT for signed commit
        run: |
          git config --global user.name "icellmobilsoft-robot"
          git config --global user.email "github_techuser@icellmobilsoft.hu"
          git config --global user.signingkey "${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}"
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true

      # https://github.com/actions/setup-java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # https://github.com/actions/checkout
      - name: Checkout ${{github.ref_name}}
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref_name}}

      # Maven release prepare
      - name: Maven release prepare
        env:
          GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
        run: |
          mvn -B release:prepare -Dgpg.keyname=$GPG_KEY_ID_GITHUB_TECHUSER --file pom.xml
          git push origin ${{github.ref_name}}

      # Maven release perform
      - name: Maven release perform
        env:
          GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
          OSSRH_USERNAME: '${{ secrets.OSS_SONATYPE_ORG_USER }}'
          OSSRH_PASSWORD: '${{ secrets.OSS_SONATYPE_ORG_PASSWORD }}'
        run: mvn -B release:perform -Dgpg.keyname=$GPG_KEY_ID_GITHUB_TECHUSER -s $GITHUB_WORKSPACE/.github/.m2/settings.xml --file pom.xml
